class Solution:    def solve(self, board):        """        :type board: List[List[str]]        :rtype: void Do not return anything, modify board in-place instead.        """        if len(board)==0 or len(board[0])==0:            return        n,m=len(board),len(board[0])        def helper(board,i,j,n,m):            if i<0 or i>=n or j<0 or j>=m:                return            if board[i][j]=="O":                board[i][j]="S"                helper(board,i-1,j,n,m)                helper(board,i,j-1,n,m)                helper(board,i+1,j,n,m)                helper(board,i,j+1,n,m)            return        #up        for i in range(m):            if board[0][i]=="O":                helper(board,0,i,n,m)        #down        for i in range(m):            if board[n-1][i]=="O":                helper(board,n-1,i,n,m)        #left        for i in range(n):            if board[i][0]=="O":                helper(board,i,0,n,m)        #right        for i in range(n):            if board[i][m-1]=="O":                helper(board,i,m-1,n,m)        for i in range(n):            for j in range(m):                if board[i][j]=="S":                    board[i][j]="O"                else:                    board[i][j]="X"        returns=Solution()print(s.solve([["X","X","X","X"],["X","O","O","X"],["X","X","O","X"],["X","O","X","X"]]))