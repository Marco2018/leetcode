class TreeNode:    def __init__(self, x):         self.val = x         self.left = None         self.right = Noneclass Solution:    def levelOrderBottom(self, root):        if not root:            return []        level=0        stack,res,nums=[],[],[]        stack.append([root,level])        while stack:            if stack[-1][1]>level:                res.append(nums)                nums=[]                level=stack[-1][1]            temp,temp_level=stack.pop()            nums.append(temp.val)            if temp.left:                stack.insert(0,[temp.left,level+1])            if temp.right:                stack.insert(0,[temp.right,level+1])        if nums:            res.append(nums)        return res[::-1]s=Solution()root=TreeNode(3)root.left=TreeNode(9)root.right=TreeNode(20)root.right.left=TreeNode(15)root.right.right=TreeNode(7)print(s.levelOrderBottom(root))