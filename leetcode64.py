import sysclass Solution(object):    def minPathSum(self, grid):        """        :type grid: List[List[int]]        :rtype: int        """        if len(grid)==0 or len(grid[0])==0:            return 0        rows,cols=len(grid),len(grid[0])        dp=[[sys.maxsize for i in range(cols+1)]for j in range(rows+1)]        for i in range(1,rows+1):            for j in range(1,cols+1):                if i==1 and j==1:                    dp[i][j]=grid[i-1][j-1]                    continue                dp[i][j]=grid[i-1][j-1]+min(dp[i-1][j],dp[i][j-1])        return dp[rows][cols]matrix=[[1,2,5],[3,2,1]]s=Solution()print(s.minPathSum(matrix))