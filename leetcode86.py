# Definition for singly-linked list.# class ListNode:#     def __init__(self, x):#         self.val = x#         self.next = Noneclass Solution:    def partition(self, head, x):        """        :type head: ListNode        :type x: int        :rtype: ListNode        """        big_cur=big_head=ListNode(-1)        small_cur=small_head=ListNode(-1)        while head:            if head.val<x:                small_cur.next=head                small_cur=head            else:                big_cur.next=head                big_cur=head            head=head.next        big_cur.next=None        small_cur.next=big_head.next        return small_head.nexts=Solution()head=ListNode(1)head.next=ListNode(4)head.next.next=ListNode(3)head.next.next.next=ListNode(2)head.next.next.next.next=ListNode(5)head.next.next.next.next.next=ListNode(2)s.partition(head,3)