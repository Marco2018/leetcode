class Solution:    def updateMatrix(self, matrix):        """        :type matrix: List[List[int]]        :rtype: List[List[int]]        """        def check(ans,i,j,n,m):            if i<0 or i>=n or j<0 or j>=m:                return 10000            else:                return ans[i][j]        if matrix==None or matrix[0]==None:            return        n,m=len(matrix),len(matrix[0])        ans=[[10000 for i in range(m)]for j in range(n)]        for i in range(n):            for j in range(m):                if matrix[i][j]==0:                    ans[i][j]=0        for i in range(n):            for j in range(m):                if matrix[i][j] != 0:                    ans[i][j]=min(ans[i][j],check(ans,i-1,j,n,m)+1,check(ans,i,j-1,n,m)+1)        for i in range(n-1,-1,-1):            for j in range(m-1,-1,-1):                ans[i][j] = min(ans[i][j], check(ans, i + 1, j, n, m)+1, check(ans, i, j + 1, n, m)+1)        return anss=Solution()matrix=[[1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1]]print(s.updateMatrix(matrix))#本题的关键在于对于 000，010，111这个case而言 如果采用四个方向求最小会出现在中间那个1的时候求四个方向的最小值但是在其下方的位置上会重新迭代会自身这个位置即对位置[1,1]求最小时min([0,1],[1,0],[2,1],[1,2])+1 在[2,1]这个点上会再求min([1,1],[3,1],[2,2],[2,0])+1因此出现无限循环解决方法：做两次对于[1,1]这个点 第一遍求min([1,2],[2,1])+1第二遍求min([1,0],[0,1])+1