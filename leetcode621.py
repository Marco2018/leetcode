from collections import defaultdictclass Solution:    def leastInterval(self, tasks: List[str], n: int) -> int:        max_num, length = 0, len(tasks)        count_dict = defaultdict(int)        for i in range(length):            count_dict[tasks[i]] += 1            max_num = max(max_num, count_dict[tasks[i]])        frequent_num, unfrequent_sum = 0, 0        for key, val in count_dict.items():            if val == max_num:                frequent_num += 1            else:                unfrequent_sum += val        empty_slots = max(0, (max_num - 1) * (n + 1 - frequent_num))        idles = max(empty_slots - unfrequent_sum, 0)        print(empty_slots, idles, unfrequent_sum)        return length + idles                