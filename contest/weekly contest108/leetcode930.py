class Solution:    def numSubarraysWithSum(self, A, S):        """        :type A: List[int]        :type S: int        :rtype: int        """        ones=[]        for i in range(len(A)):            if A[i]==1:                ones.append(i)        all,n=len(A),len(ones)        if S==0:            sum1=0            if n==0:                return int(all*(all+1)/2)            else:                for i in range(n+1):                    if i==0:                        temp=ones[0]-0                        sum1+= int(temp*(temp+1)/2)                    elif i==n:                        temp=all-ones[n-1]-1                        sum1 += int(temp * (temp + 1) / 2)                    else:                        temp=ones[i]-ones[i-1]-1                        sum1 += int(temp * (temp + 1) / 2)            return sum1        if n<S:            return 0        if n==S:            left=ones[0]-0+1            right=all-ones[n-1]            return left*right        count=0        for i in range(n-S+1):            if i==0:                left=ones[0]-0+1                right=ones[S]-ones[S-1]                count+=left*right            elif i==n-S:                left = ones[n-S]-ones[n-S-1]                right = all-ones[n-1]                count += left * right            else:                left=ones[i]-ones[i-1]                right=ones[i+S]-ones[i+S-1]                count+=left*right        return counts=Solution()N=5print(s.beautifulArray(N))