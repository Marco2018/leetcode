# Definition for a binary tree node.class TreeNode:     def __init__(self, x):         self.val = x         self.left = None         self.right = Nonefrom collections import dequeclass Solution:    def rightSideView(self, root):        """        :type root: TreeNode        :rtype: List[int]        """        line1,line2,res=deque(),deque(),[]        if not root:            return []        line1.append(root)        while line1 or line2:            res.append(line1[-1].val)            while line1:                temp=line1[0]                line1.popleft()                if temp.left:                    line2.append(temp.left)                if temp.right:                    line2.append(temp.right)            line1=line2.copy()            line2.clear()        return ress=Solution()root=TreeNode(1)root.left=TreeNode(2)root.right=TreeNode(3)root.left.left=TreeNode(4)print(s.rightSideView(root))