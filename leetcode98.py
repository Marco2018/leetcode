# Definition for a binary tree node.# class TreeNode(object):#     def __init__(self, x):#         self.val = x#         self.left = None#         self.right = Noneclass Solution(object):    def isValidBST(self, root):        """        :type root: TreeNode        :rtype: bool        """        if root==None:            return True        def isvalid(root,min,max):            if root==None:                return True            if root.val<=min or root.val>=max:                return False            return isvalid(root.left,min,root.val) and isvalid(root.right,root.val,max)        return isvalid(root,-float("inf"),float("inf"))nums1 = [1, 2, 3, 0, 0, 0]m = 3nums2 = [2, 2, 6]n = 3s=Solution()n=100print(s.merge(nums1,m,nums2,n))