class Solution:    def permuteUnique(self, nums):        res = []        self.dfs(nums, [], res)        return res    def dfs(self, nums, path, res):        if not nums:            if path not in res:                res.append(path)            # return # backtracking        for i in range(len(nums)):            self.dfs(nums[:i] + nums[i + 1:], path + [nums[i]], res)s=Solution()nums=[1,1,2]print(s.permuteUnique(nums))