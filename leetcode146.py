class LRUCache:    def __init__(self, capacity):        self.nums = {}        self.stack = []        self.capacity = capacity    def get(self, key):        if key in self.nums:            self.stack.remove(key)            self.stack = [key] + self.stack            return self.nums[key]        else:            return -1    def put(self, key, value):        if key in self.stack:            self.nums[key] = value            self.stack.remove(key)            self.stack = [key] + self.stack            return        if len(self.stack) == self.capacity:            key1 = self.stack[-1]            self.stack.pop()            self.nums.pop(key1)        self.stack = [key] + self.stack        self.nums[key] = values=LRUCache(2)s.put(2,1)s.put(1,1)s.put(2,3)s.put(4,1)print(s.get(1))print(s.get(2))