# Definition for a binary tree node.# class TreeNode:#     def __init__(self, x):#         self.val = x#         self.left = None#         self.right = Noneclass Solution:    def longestUnivaluePath(self, root):        """        :type root: TreeNode        :rtype: int        """        def helper(root):            left,right=0,0            if root.left:                left=helper(root.left)                if root.val==root.left.val:                    left+=1                else:                    left=0            if root.right:                right=helper(root.right)                if root.val==root.right.val:                    right+=1                else:                    right=0            self.res=max(self.res,right+left)            return max(right,left)        if not root:            return 0        self.res=0        helper(root)        return self.ress=Solution()root=TreeNode(5)root.left=TreeNode(4)root.left.left=TreeNode(1)root.left.right=TreeNode(1)root.right=TreeNode(5)root.right.left=TreeNode(5)root.right.right=TreeNode(5)print(s.longestUnivaluePath(root))