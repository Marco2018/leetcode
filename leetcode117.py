# Definition for binary tree with next pointer.class TreeLinkNode:     def __init__(self, x):         self.val = x         self.left = None         self.right = None         self.next = Nonefrom collections import dequeimport copyclass Solution:    # @param root, a tree link node    # @return nothing    def connect(self, root):        level1,level2=deque(),deque()        if root==None:            return        level1.append(root)        while level1 or level2:            n = len(level1)            for i in range(n - 1):                level1[i].next = level1[i + 1]            level1[-1].next = None            while level1:                temp=level1[0]                level1.popleft()                if temp.left:                    level2.append(temp.left)                if temp.right:                    level2.append(temp.right)            level1=level2            level2=deque()        returns=Solution()root=TreeLinkNode(1)root.left=TreeLinkNode(2)root.right=TreeLinkNode(3)s.connect(root)print(root.left.next.val)