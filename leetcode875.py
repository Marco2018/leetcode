class Solution:    def minEatingSpeed(self, piles, H):        """        :type piles: List[int]        :type H: int        :rtype: int        """        def helper(piles,H,k):            sum1=0            for i in range(len(piles)):                if piles[i]%k==0:                    sum1+=piles[i]/k                else:                    sum1+=int(piles[i]/k)+1            if sum1<=H:                return True            return False        left,right,n=1,max(piles),len(piles)        if n==0:            return        while left<right:            mid=int((left+right)/2)            if helper(piles,H,mid):                right=mid            else:                left=mid+1        return left