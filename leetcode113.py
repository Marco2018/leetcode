# Definition for a binary tree node.# class TreeNode:#     def __init__(self, x):#         self.val = x#         self.left = None#         self.right = Noneclass Solution:    def pathSum(self, root, sum):        """        :type root: TreeNode        :type sum: int        :rtype: List[List[int]]        """        def helper(root,sum,path,res):            if root==None:                return            if root.left==None and root.right==None and sum==root.val:                path.append(root.val)                res.append(path)                return            helper(root.left,sum-root.val,path+[root.val],res)            helper(root.right,sum-root.val,path+[root.val],res)        if not root:            return []        res=[]        helper(root,sum,[],res)        return resnums=[2,3,6,7]target=7print(combination_sum(nums,target))